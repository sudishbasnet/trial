# Generated by Django 2.2.4 on 2020-03-25 11:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=10)),
                ('photo', models.ImageField(upload_to='animals')),
                ('dob', models.DateField()),
                ('date_joined', models.DateField()),
                ('location', models.CharField(max_length=50)),
                ('born_place', models.CharField(max_length=50)),
                ('population_distribution', models.IntegerField(blank=True)),
                ('animal_dimension', models.CharField(max_length=100)),
                ('average_dimension', models.TextField()),
                ('average_life_span', models.CharField(max_length=50)),
                ('dietary_requirement', models.TextField()),
                ('natural_habitat', models.TextField()),
                ('colour_variants', models.CharField(max_length=50)),
                ('visibility', models.CharField(default='visible', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('photo', models.ImageField(default='profile/avtar.jpg', upload_to='profile')),
                ('role', models.CharField(default='visitor', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WatchList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('condition', models.CharField(max_length=255)),
                ('observation_date', models.DateField()),
                ('animal', models.ForeignKey(on_delete='CASCADE', related_name='animal_watchlist', to='ClaybrookZoo.Animal')),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete='CASCADE', related_name='updater', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('existing_customer', models.CharField(max_length=10)),
                ('official_id', models.CharField(max_length=70)),
                ('primary_contact', models.IntegerField()),
                ('secondary_contact', models.IntegerField()),
                ('address', models.CharField(max_length=100)),
                ('sponsor_band', models.CharField(max_length=2)),
                ('total_price', models.IntegerField()),
                ('aggreement_period', models.CharField(max_length=100)),
                ('signage_area_percent', models.CharField(max_length=5)),
                ('signage_photo', models.ImageField(upload_to='signage')),
                ('note', models.CharField(max_length=255)),
                ('aggreement', models.CharField(max_length=3)),
                ('payment_detail', models.CharField(max_length=50)),
                ('payment_received', models.CharField(default='no', max_length=3)),
                ('review_date', models.DateField()),
                ('animal', models.ManyToManyField(related_name='sponsored_animal', to='ClaybrookZoo.Animal')),
                ('confirmed_staff', models.ForeignKey(blank=True, on_delete='CASCADE', related_name='sponsor_confirmed', to=settings.AUTH_USER_MODEL)),
                ('sponsored_user', models.ForeignKey(blank=True, on_delete='CASCADE', related_name='sponsored_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reptile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reproduction_type', models.CharField(max_length=50)),
                ('offspring_number', models.IntegerField()),
                ('clutch_size', models.CharField(max_length=50)),
                ('animal', models.ForeignKey(on_delete='CASCADE', to='ClaybrookZoo.Animal')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255)),
                ('date', models.DateField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete='CASCADE', related_name='message_receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete='CASCADE', related_name='message_sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mammal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gestational_period', models.CharField(max_length=50)),
                ('mammal_category', models.CharField(max_length=50)),
                ('average_temperature', models.CharField(max_length=20)),
                ('animal', models.ForeignKey(on_delete='CASCADE', to='ClaybrookZoo.Animal')),
            ],
        ),
        migrations.CreateModel(
            name='Fish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_temperature', models.CharField(max_length=20)),
                ('water_type', models.CharField(max_length=50)),
                ('animal', models.ForeignKey(on_delete='CASCADE', to='ClaybrookZoo.Animal')),
            ],
        ),
        migrations.CreateModel(
            name='CaseHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_Record', models.CharField(max_length=255)),
                ('transfer_date_destination', models.CharField(max_length=150)),
                ('transfer_reason', models.CharField(max_length=150)),
                ('death_date', models.DateField()),
                ('death_Cause', models.CharField(max_length=255)),
                ('incineration_date_location', models.CharField(max_length=150)),
                ('animal', models.ForeignKey(on_delete='CASCADE', related_name='animal_case', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField()),
                ('no_of_entries', models.IntegerField()),
                ('form_visibility', models.CharField(max_length=10)),
                ('date', models.DateField(auto_now_add=True)),
                ('booked_by', models.ForeignKey(on_delete='CASCADE', related_name='entry_booked', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bird',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nest_construction', models.CharField(max_length=100)),
                ('clutch_size', models.CharField(max_length=50)),
                ('wing_span', models.CharField(max_length=50)),
                ('fly_ability', models.CharField(max_length=3)),
                ('animal', models.ForeignKey(on_delete='CASCADE', to='ClaybrookZoo.Animal')),
            ],
        ),
    ]
